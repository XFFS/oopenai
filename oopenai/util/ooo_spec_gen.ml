open Ppxlib

let loc = Location.in_file "ooo_spec_gen.ml"

module Ast = Ast_builder.Make (struct
  let loc = loc
end)

(* let context = Extension.Context.module_expr *)
(* let name = "openapi.client" *)
type endpoint = string * string * string

let var v = Ast.Located.mk v

let endpoint_module name (endpoints : endpoint list) =
  let name = Ast.Located.mk (Some (name ^ "_api")) in
  let endpoint (fname, uri, data) =
    let function_name = Ast.ppat_var (var fname) in
    let uri = Ast.estring uri in
    let data = Ast.estring data in
    [%stri let [%p function_name] = Client.request [%e uri] [%e data]]
  in
  let expr = endpoints |> List.map endpoint |> Ast.pmod_structure in
  Ast.module_binding ~name ~expr |> Ast.pstr_module

(* TODO: name to become all data from OpenAPI spec *)
let modules name endpoints = [%str [%%i endpoint_module name endpoints]]

(* TODO: Put in comment *)
let header = "Generated by ooapi-gen in DATE"

let write_ast str =
  let fmt = Format.std_formatter in
  Format.fprintf fmt "%a\n" Pprintast.structure str;
  Format.print_flush ()

let () =
  modules
    "OpenAI"
    [ ("start_chat", "chat", "mydata")
    ; ("end_chat", "chat/end", "foo")
    ; ("completion", "complete", "mycompletiondata")]
  |> write_ast
